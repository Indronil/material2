{"version":3,"sources":["stepper/stepper.ts"],"names":[],"mappings":"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","file":"stepper/stepper.js","sourcesContent":["import {\r\n    NgModule,\r\n    ModuleWithProviders,\r\n    ContentChild,\r\n    Directive,\r\n    Component,\r\n    Input,\r\n    Output,\r\n    ViewChildren,\r\n    NgZone,\r\n    EventEmitter,\r\n    QueryList,\r\n    ContentChildren,\r\n\r\n    OnChanges,\r\n    trigger,\r\n    state,\r\n    animate,\r\n    transition,\r\n    style\r\n} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {PortalModule} from '../core';\r\nimport {MdIconModule, MdIconRegistry} from '../icon/icon';\r\n\r\nimport {MdProgressCircleModule} from '../progress-circle/progress-circle';\r\n\r\nimport {MdStepLabel} from './step-label';\r\nimport {MdStepContent} from './step-content';\r\nimport {MdStepNav} from './step-nav';\r\n\r\nimport {MdStepLabelWrapper} from './step-label-wrapper';\r\nimport {MdStepContentWrapper} from './step-content-wrapper';\r\nimport {MdStepNavWrapper} from './step-nav-wrapper';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport {RIGHT_ARROW, LEFT_ARROW, ENTER} from '../core';\r\n\r\n/** Used to generate unique ID's for each stepper component */\r\nlet nextId = 0;\r\n\r\n/** A simple change event emitted on focus or selection changes. */\r\nexport class MdStepChangeEvent {\r\n    index: number;\r\n    step: MdStep;\r\n}\r\n\r\n@Directive({\r\n    selector: 'md-step'\r\n})\r\nexport class MdStep {\r\n    @ContentChild(MdStepLabel) label: MdStepLabel;\r\n    @ContentChild(MdStepContent) content: MdStepContent;\r\n    @ContentChild(MdStepNav) nav: MdStepNav;\r\n\r\n    /**\r\n     * Step active setting, if step is active set to true.\r\n     * TODO: internal\r\n     * Note: Look into changing the way active is currently unset and set.\r\n     */\r\n    private _active = false;\r\n    @Input('active')\r\n    set active(value: boolean) {\r\n        this._active = value;\r\n    }\r\n    get active(): boolean {\r\n        return this._active;\r\n    }\r\n\r\n    /** Step editable setting. */\r\n    private _editable = true;\r\n    @Input('editable')\r\n    set editable(value: boolean) {\r\n        this._editable = (value != null && `${value}` !== 'false');\r\n    }\r\n    get editable(): boolean {\r\n        return this._editable;\r\n    }\r\n\r\n    /** Step valid setting. */\r\n    private _valid = true;\r\n    @Input('valid')\r\n    set valid(value: boolean) {\r\n        this._valid = value;\r\n    }\r\n    get valid(): boolean {\r\n        return this._valid;\r\n    }\r\n\r\n    /**\r\n     * Step optional setting, can be skipped.\r\n     * TODO: internal\r\n     * Note: Needs completing.\r\n     */\r\n    private _optional = false;\r\n    @Input('optional')\r\n    set optional(value: boolean) {\r\n        this._optional = value;\r\n    }\r\n    get optional(): boolean {\r\n        return this._optional;\r\n    }\r\n\r\n    /**\r\n     * Step saving after event save for step.\r\n     * TODO: internal\r\n     * Note: Needs completing.\r\n     */\r\n    private _saving = false;\r\n    @Input('saving')\r\n    set saving(value: boolean) {\r\n        this._saving = value;\r\n    }\r\n    get saving(): boolean {\r\n        return this._saving;\r\n    }\r\n\r\n    /**\r\n     * Step transient feedback true or false.\r\n     * TODO: internal\r\n     * Note: Needs completing.\r\n     */\r\n    private _feedback: boolean = false;\r\n    @Input('feedback')\r\n    set feedback(value: boolean) {\r\n        this._feedback = value;\r\n    }\r\n    get feedback(): boolean {\r\n        return this._feedback;\r\n    }\r\n\r\n    /**\r\n     * Step transient feedback message.\r\n     * TODO: internal\r\n     * Note: Needs completing.\r\n     */\r\n    private _feedbackMessage: string;\r\n    @Input('feedbackMessage')\r\n    set feedbackMessage(value: string) {\r\n        this._feedbackMessage = value;\r\n    }\r\n    get feedbackMessage(): string {\r\n        return this._feedbackMessage;\r\n    }\r\n\r\n    /**\r\n     * Step warning true or false.\r\n     * TODO: internal\r\n     * Note: Needs completing.\r\n     */\r\n    private _warning: boolean = false;\r\n    @Input('warning')\r\n    set warning(value: boolean) {\r\n        this._warning = value;\r\n    }\r\n    get warning(): boolean {\r\n        return this._warning;\r\n    }\r\n\r\n    /**\r\n     * Step warning message.\r\n     * TODO: internal\r\n     * Note: Needs completing.\r\n     */\r\n    private _warningMessage: string;\r\n    @Input('warningMessage')\r\n    set warningMessage(value: string) {\r\n        this._warningMessage = value;\r\n    }\r\n    get warningMessage(): string {\r\n        return this._warningMessage;\r\n    }\r\n\r\n    /** Step completed setting, if step is complete set to true. */\r\n    private _completed = false;\r\n    @Input('completed')\r\n    set completed(value: boolean) {\r\n        this._completed = value;\r\n    }\r\n    get completed(): boolean {\r\n        return this._completed;\r\n    }\r\n\r\n    /** Step valid setting. */\r\n    get isTargetable(): boolean {\r\n        return !this.editable && this.completed ? false : true;\r\n    }\r\n\r\n    /** Step icon */\r\n    private get _stepperIconLigature(): string {\r\n        return (!this.active && this.completed) ? 'done' : 'create';\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Material design stepper component.  Supports basic step (label + content + nav) and includes\r\n * keyboard navigation, and screen reader.\r\n * See: https://www.google.com/design/spec/components/steppers.html\r\n */\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'md-stepper',\r\n    templateUrl: 'stepper.html',\r\n    styleUrls: ['stepper.css'],\r\n    animations: [\r\n        trigger('fadeInOut', [\r\n            state('void', style({opacity: 0})),\r\n            transition('void => *', [\r\n                style({\r\n                    opacity: 0,\r\n                }),\r\n                animate('0.2s ease')\r\n            ]),\r\n            transition('* => void', [\r\n                style({\r\n                    opacity: 1,\r\n                }),\r\n                animate('0.2s ease')\r\n            ])\r\n        ]),\r\n        trigger('fadeUpDown', [\r\n            state('void', style({opacity: 1, transform: 'translateY(0)'})),\r\n            transition('void => *', [\r\n                style({\r\n                    transform: 'translateY(100%)'\r\n                }),\r\n                animate(250)\r\n            ]),\r\n            transition('* => void', [\r\n                style({\r\n                    transform: 'translateY(0)'\r\n                }),\r\n                animate(250, style({transform: 'translateY(100%)'}))\r\n            ])\r\n        ]),\r\n        trigger('heightUpDown', [\r\n            //state('void', style({height: '*'})),\r\n            transition('void => *', [\r\n                style({\r\n                    height: 0\r\n                }),\r\n                animate(250, style({height: '*'}))\r\n            ]),\r\n            transition('* => void', [\r\n                style({\r\n                    height: '*'\r\n                }),\r\n                animate(250, style({height: 0}))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class MdStepper {\r\n\r\n    @ContentChildren(MdStep) _steps: QueryList<MdStep>;\r\n\r\n    @ViewChildren(MdStepLabelWrapper) _labelWrappers: QueryList<MdStepLabelWrapper>;\r\n\r\n    private _isInitialized: boolean = false;\r\n    private _focusIndex: number = 0;\r\n    private _stepperId: number;\r\n\r\n    /** Stepper mode can be nonlinear or linear.\r\n     * TODO: internal\r\n     * Node: This has not been fully implemented and needs to be finished.\r\n     */\r\n    private _mode: string = 'nonlinear';\r\n    @Input()\r\n    set mode(value: string) {\r\n        this._mode = value;\r\n    }\r\n    get mode(): string {\r\n        return this._mode;\r\n    }\r\n\r\n    /** Stepper orientation can be horizontal or vertical.\r\n     * TODO: internal\r\n     * Node: This has not been fully implemented and needs to be finished.\r\n     */\r\n    private _orientation: string = 'horizontal';\r\n    @Input()\r\n    set orientation(value: string) {\r\n        this._orientation = value;\r\n    }\r\n    get orientation(): string {\r\n        return this._orientation;\r\n    }\r\n\r\n    /** Output to enable support for two-way binding on `mode`. */\r\n    private _onModeChange: EventEmitter<String> = new EventEmitter<String>();\r\n    @Output('modeChange') get modeChange(): Observable<any> {\r\n        return this._onModeChange.asObservable();\r\n    }\r\n\r\n    /** Output to enable support for two-way binding on `orientation`. */\r\n    private _onOrientationChange: EventEmitter<String> = new EventEmitter<String>();\r\n    @Output('orientationChange') get orientationChange(): Observable<any> {\r\n        return this._onOrientationChange.asObservable();\r\n    }\r\n\r\n\r\n\r\n    /** Stepper selected step index. */\r\n    private _selectedIndex: number = 0;\r\n    @Input()\r\n    set selectedIndex(value: number) {\r\n        if (value != this._selectedIndex && this.isValidIndex(value)) {\r\n            this._selectedIndex = value;\r\n\r\n            if (this._isInitialized) {\r\n                this._onSelectChange.emit(this._createChangeEvent(value));\r\n            }\r\n        }\r\n    }\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    get selectedStep(): MdStep {\r\n        return (<any>this._steps).toArray()[this.selectedIndex];\r\n    }\r\n\r\n    /**\r\n     * Determines if an index is valid.  If the steps are not ready yet, we assume that the user is\r\n     * providing a valid index and return true.\r\n     */\r\n    isValidIndex(index: number): boolean {\r\n        if (this._steps) {\r\n            console.warn( 'Mode ' + this.mode );\r\n            if (this.mode === 'linear') {\r\n\r\n                const step = this._steps.toArray()[index];\r\n                return step.isTargetable;\r\n            }\r\n            return true;\r\n            //return step && !step.completed || step && step.completed && step.editable;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /** Output to enable support for two-way binding on `selectedIndex`. */\r\n    @Output('selectedIndexChange') private get _selectedIndexChange(): Observable<number> {\r\n        return this.selectChange.map(event => event.index);\r\n    }\r\n\r\n    private _onFocusChange: EventEmitter<MdStepChangeEvent> = new EventEmitter<MdStepChangeEvent>();\r\n    @Output('focusChange') get focusChange(): Observable<MdStepChangeEvent> {\r\n        return this._onFocusChange.asObservable();\r\n    }\r\n\r\n    private _onSelectChange: EventEmitter<MdStepChangeEvent> = new EventEmitter<MdStepChangeEvent>();\r\n    @Output('selectChange') get selectChange(): Observable<MdStepChangeEvent> {\r\n        return this._onSelectChange.asObservable();\r\n    }\r\n\r\n\r\n    constructor() {\r\n        this._stepperId = nextId++;\r\n    }\r\n\r\n\r\n    ngAfterViewChecked(): void {\r\n        this._isInitialized = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Reference to the current label wrapper; defaults to null for initial render before the\r\n     * ViewChildren references are ready.\r\n     */\r\n    private get _currentLabelWrapper(): HTMLElement {\r\n        return this._labelWrappers && this._labelWrappers.length\r\n            ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\r\n            : null;\r\n    }\r\n\r\n    /** Tracks which element has focus; used for keyboard navigation */\r\n    get focusIndex(): number {\r\n        return this._focusIndex;\r\n    }\r\n\r\n    /** When the focus index is set, we must manually send focus to the correct label */\r\n    set focusIndex(value: number) {\r\n        if (this.isValidIndex(value)) {\r\n            this._focusIndex = value;\r\n\r\n            if (this._isInitialized) {\r\n                this._onFocusChange.emit(this._createChangeEvent(value));\r\n            }\r\n\r\n            if (this._labelWrappers && this._labelWrappers.length) {\r\n                this._labelWrappers.toArray()[value].focus();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _createChangeEvent(index: number): MdStepChangeEvent {\r\n        const event = new MdStepChangeEvent;\r\n        event.index = index;\r\n        if (this._steps && this._steps.length) {\r\n            event.step = this._steps.toArray()[index];\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /** Returns a class name with a unique id for each step element */\r\n    _getStepId(value: string, index: number): string {\r\n\r\n        return `md-step-${value}-${this._stepperId}-${index}`;\r\n    }\r\n\r\n    /** Stepper keyboard events for navigating steps */\r\n    handleKeydown(event: KeyboardEvent) {\r\n        switch (event.keyCode) {\r\n            case RIGHT_ARROW:\r\n                this.nextStep(false);\r\n                break;\r\n            case LEFT_ARROW:\r\n                this.previousStep(false);\r\n                break;\r\n            case ENTER:\r\n                this.selectStep(this.focusIndex);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Moves the focus or selected left or right depending on the offset provided and if it should be selected.\r\n     * Valid offsets are 1 and -1.\r\n     * Valid select are true and false.\r\n     */\r\n    moveStep(offset: number, select: boolean = true) {\r\n        if (this._labelWrappers) {\r\n            this.focusIndex = this.selectedIndex;\r\n            const steps: MdStep[] = this._steps.toArray();\r\n            for (let i = this.focusIndex + offset; i < steps.length && i >= 0; i += offset) {\r\n                if (this.isValidIndex(i)) {\r\n                    if (select) {\r\n                        this.selectStep(i);\r\n                    }\r\n                    else {\r\n                        this.focusIndex = i;\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Selects the step with the index provided.\r\n     * TODO: internal\r\n     * Note: Improve checks and also change the way active is unset and set.\r\n     */\r\n    selectStep(index: number): void  {\r\n        this.selectedStep.completed = this.selectedStep.valid ? true : false;\r\n        if (this.mode === 'linear') {\r\n            if (!this.selectedStep.valid && index >= this.selectedIndex) { return }\r\n            if (!this.beforeCompleted(index)) { return; }\r\n       }\r\n        const steps: MdStep[] = this._steps.toArray();\r\n        //if (this.mode === 'linear') {\r\n            if (steps[index].completed && !steps[index].editable) {\r\n                return;\r\n            }\r\n        //}\r\n        steps[this.selectedIndex].active = false;\r\n        this.selectedIndex = this.focusIndex = index;\r\n        steps[this.selectedIndex].active = true;\r\n    }\r\n\r\n    /** Increment the step index by 1 until a valid step is found. */\r\n    nextStep(select: boolean = true): void {\r\n        this.moveStep(1, select);\r\n    }\r\n\r\n    /** Decrement the step index by 1 until a valid step is found. */\r\n    previousStep(select: boolean = true): void {\r\n        this.moveStep(-1, select);\r\n    }\r\n\r\n    /** Check if all steps are completed before a specific step */\r\n    beforeCompleted(index: number): boolean {\r\n        const steps: MdStep[] = this._steps.toArray();\r\n        for (var i = this.selectedIndex; i < index; i++) {\r\n            if (!steps[i].completed && !steps[i].optional) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * To disable step if they are not targetable\r\n     * TODO: internal\r\n     * Note: This has not been started but will disable the step, add class md-step-disabled.\r\n     */\r\n    _isStepDisabled(index: number): boolean {\r\n        /** All steps on a non-linear stepper shouldn't be disabled. */\r\n        if (this.mode === 'nonlinear') {\r\n            return false;\r\n        }\r\n        /** Some logic to see if the specific step is targetable */\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, PortalModule, MdIconModule, MdProgressCircleModule],\r\n\r\n    exports: [MdStepper, MdStepLabel, MdStepContent, MdStepNav, MdStep],\r\n    declarations: [MdStepper, MdStepLabel, MdStepContent, MdStepNav, MdStep, MdStepLabelWrapper, MdStepContentWrapper, MdStepNavWrapper],\r\n})\r\nexport class MdStepperModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: MdStepperModule,\r\n            providers: [MdIconRegistry]\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}