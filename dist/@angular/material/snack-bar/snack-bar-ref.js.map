{"version":3,"sources":["snack-bar/snack-bar-ref.ts"],"names":[],"mappings":"OAEO,EAAC,OAAO,EAAC,MAAM,cAAc;AAEpC,sDAAsD;AAGtD;;GAEG;AACH;IAOE,uBAAY,QAAW,EAAU,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAHxD,oEAAoE;QAC5D,iBAAY,GAAiB,IAAI,OAAO,EAAE,CAAC;QAGjD,iEAAiE;QACjE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,+BAA+B;IAC/B,+BAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,kFAAkF;IAClF,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IACH,oBAAC;AAAD,CAxBA,AAwBC,IAAA","file":"snack-bar/snack-bar-ref.js","sourcesContent":["import {OverlayRef} from '../core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n// TODO(josephperrott): Implement onAction observable.\r\n\r\n\r\n/**\r\n * Reference to a snack bar dispatched from the snack bar service.\r\n */\r\nexport class MdSnackBarRef<T> {\r\n  /** The instance of the component making up the content of the snack bar. */\r\n  readonly instance: T;\r\n\r\n  /** Subject for notifying the user that the snack bar has closed. */\r\n  private _afterClosed: Subject<any> = new Subject();\r\n\r\n  constructor(instance: T, private _overlayRef: OverlayRef) {\r\n    // Sets the readonly instance of the snack bar content component.\r\n    this.instance = instance;\r\n  }\r\n\r\n  /** Dismisses the snack bar. */\r\n  dismiss(): void {\r\n    if (!this._afterClosed.closed) {\r\n      this._overlayRef.dispose();\r\n      this._afterClosed.complete();\r\n    }\r\n  }\r\n\r\n  /** Gets an observable that is notified when the snack bar is finished closing. */\r\n  afterDismissed(): Observable<void> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}